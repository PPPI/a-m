{"Suggestions": [{"Id": "2113", "Title": "#2113: Random string generation API", "Probability": 0.39, "Repo": "google/guava"}, {"Id": "1814", "Title": "#1814: Support for partially random expiration", "Probability": 0.04, "Repo": "google/guava"}, {"Id": "480", "Title": "#480: New overload for Ints.indexOf, etc. to specify range", "Probability": 0.03, "Repo": "google/guava"}, {"Id": "2732", "Title": "#2732: ListenableFutureExplained does not explain", "Probability": 0.02, "Repo": "google/guava"}, {"Id": "2041", "Title": "#2041: Add a random weighted selector", "Probability": 0.02, "Repo": "google/guava"}, {"Id": "1918", "Title": "#1918: AbstractService needs functionality to triggerShutdown or interrupt running Tasks.", "Probability": 0.02, "Repo": "google/guava"}, {"Id": "982", "Title": "#982: Request to make Joiner serializable", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "973", "Title": "#973: An analogue to Iterator for things that might throw, be closeable, block, etc.", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "971", "Title": "#971: Cache.getAll fails to trigger refresh", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "939", "Title": "#939: Scalable Bloom Filter implementation", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "938", "Title": "#938: Make a public Abstract(Non)StreamingHashFunction", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "932", "Title": "#932: Allow to pass a custom base directory to `Files.createTempDir`", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "927", "Title": "#927: Add HTTP status codes", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "909", "Title": "#909: Add a DiscreteDomain for Enum values", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "907", "Title": "#907: Make Equivalence.Wrapper implement Supplier", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "902", "Title": "#902: Multitable interface", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "900", "Title": "#900: Add volatile semantics to the count of CountingInput(Output)Stream", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "889", "Title": "#889: Request: CityHash as a hasher option", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "888", "Title": "#888: PriorityExecutorService", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "860", "Title": "#860: DiscreteDomains.characters()", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "857", "Title": "#857: ExpiringMemoizingSupplier: value expires too soon if delegate.get() very slow", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "856", "Title": "#856: Add Optional.filter(Predicate)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "828", "Title": "#828: Make more collections GWT-serializable", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "811", "Title": "#811: Runtime.exec helper", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "807", "Title": "#807: WeakEventBus that uses a weak reference to registered objects", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "786", "Title": "#786: adding a set of methods into InetAddresses to match ip+subnetmask", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "752", "Title": "#752: Faster simplifyPath", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "690", "Title": "#690: Add Services.addShutdownHook(Service)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "683", "Title": "#683: A Pool<T> for expensive objects", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "606", "Title": "#606: Filtering methods for Tables", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "593", "Title": "#593: A FilterInputStream variant that doesn't delegate skip() to skip()", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "592", "Title": "#592: ByteBufferData{Input,Output}Stream", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "590", "Title": "#590: Non-final CountingInputStream (, others?)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "521", "Title": "#521: Add the DisjointSet data structure", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "490", "Title": "#490: Retry tool", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "418", "Title": "#418: Services that are stopped cannot be restarted", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "367", "Title": "#367: Add Interner#size()", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "357", "Title": "#357: Document that LinkedHashMultimap does not play well with mutable values", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2851", "Title": "#2851: Add Equivalence Relation", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2847", "Title": "#2847: InternetDomainName.topPrivateDomain() improvement", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2827", "Title": "#2827: Cache load + compute methods are incompatible", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2822", "Title": "#2822: Add a page about guava-testlib to the wiki", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2811", "Title": "#2811: AbstractScheduledService stop slient", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2793", "Title": "#2793: GWT: error: cannot access com.google.common.collect.AbstractIterator", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2792", "Title": "#2792: Getting the Event -> Subscribers mapping of an EventBus", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2790", "Title": "#2790: com.google.common.escape.Platform - ThreadLocal leak", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2788", "Title": "#2788: Minor cache documentation errors", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2784", "Title": "#2784: use PECS principle in TreeTraverser", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2782", "Title": "#2782: Remove jsr305 dependency", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2778", "Title": "#2778: Graphs.transitiveClosure adding self-loops is unintuitive", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2774", "Title": "#2774: Non-returning waitForLoadingValue thread when no loading thread exists", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2766", "Title": "#2766: j.u.Optional utilities", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2756", "Title": "#2756: org.sonatype.oss-parents deprecated", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2750", "Title": "#2750: ImmutableRange{Map,Set} collectors", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2748", "Title": "#2748: Any interest in a PR making BloomFilter lock-free?", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2730", "Title": "#2730: RateLimiter.create called with zero warmup fails with real clock", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2729", "Title": "#2729: Non final `Stopwatch`", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2713", "Title": "#2713: Add CharSource.readToCharArray()", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2710", "Title": "#2710: Stream replacement for FluentIterable.filter(Class)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2708", "Title": "#2708: Null map field reference in ImmutableMultimap after deserialization", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "269", "Title": "#269: GWT serialization checklist", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2675", "Title": "#2675: AtomicLongMap using custom ConcurrentMap", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2674", "Title": "#2674: Please add content-type 'audio/vorbis', 'audio/x-wav' and ability to create MimeType using full name", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2672", "Title": "#2672: Missing UnsignedInts.checkedCast", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2664", "Title": "#2664: New sparse table type", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2647", "Title": "#2647: Proposition of new component: Pivot Table", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2641", "Title": "#2641: Feature request: topological sorting support", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2633", "Title": "#2633: GWT Serialization of Guava ImmutableLists problematic", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2617", "Title": "#2617: Add lastIndexOf with array target in primitives' utility classes", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2609", "Title": "#2609: Feature request: directed acyclic graph implementation in common.graph", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2577", "Title": "#2577: Dispatcher with \"yielding\" behaviour makes EventBus more usable on UI threads", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2569", "Title": "#2569: Not getting \"standardAddAll\" in CollectionHelpersExplained - how much override needed?", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2559", "Title": "#2559: ByteStreams.copy(InputStream, WriteableByteChannel)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2521", "Title": "#2521: equalsHelper", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2514", "Title": "#2514: Add possibility to create Striped lock with 'fair ordering policy' = true", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2512", "Title": "#2512: add method in  class Maps", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2505", "Title": "#2505: Iterators.forArray can return a ListIterator", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2504", "Title": "#2504: EventBus: Duplicating handlers", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2497", "Title": "#2497: Document how to transform elements before joining", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2487", "Title": "#2487: Add a method to get the view of the row & columns of a Table as a SetMultimap", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2484", "Title": "#2484: Build with javac-with-errorprone", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2476", "Title": "#2476: Feature Request:  Typescript port of library for use in client-side apps", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2471", "Title": "#2471: Request for removal of com.google.common.collect.TreeTraverser from Guava's Beta", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2470", "Title": "#2470: `copyOf` in immutable collections does not document throwing NPE when argument is null", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2469", "Title": "#2469: If WrappingExecutorService.wrapTask(Callable) returns a Callable that throws a checked exception, wrapTask(Runnable) has no good options for handling it", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2468", "Title": "#2468: Add Multimaps.index(Set<V>, Function<V, K>)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2453", "Title": "#2453: Feature Addition / Extending Functionality : Fast Data Shifting .", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2452", "Title": "#2452: Potential problems of MutableGraph vs optional mutation methods on Graph", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2451", "Title": "#2451: Remove StandardSystemProperty from Guava's Beta", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2442", "Title": "#2442: Misleading javadoc of CacheBuilder", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2440", "Title": "#2440: Figure out if SerializingExecutor should have any interruption logic", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "243", "Title": "#243: Serialization Refactoring Support", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2411", "Title": "#2411: Feature Request: Tree implementation in com.google.common.graph", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2408", "Title": "#2408: Guava LocalCache recencyQueue is 223M entires dominating 5.3GB of heap", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2407", "Title": "#2407: EnumMaps#forAllKeys", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2405", "Title": "#2405: Update ContributorSetUp for Github", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2396", "Title": "#2396: Hasher should be re-usable via a reset() method", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2389", "Title": "#2389: Incoherent miss count in cache stats", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2370", "Title": "#2370: Add *Math.nextPowerOfTwo", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2369", "Title": "#2369: FinalizableReferenceQueue can't be used in weblogic?", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2366", "Title": "#2366: BloomFilter add a new method:create(Funnel,long,double),but,i can not expected more than Integer.MAX_VALUE insertions?", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2360", "Title": "#2360: New List Implementation Advice for Guava Collections", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2264", "Title": "#2264: NullPointerTester passes null for @Nullable parameters: feature or misfeature?", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2246", "Title": "#2246: Add Ordering.explicit() that compares using == operator", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2230", "Title": "#2230: com.google.common.cache.AbstractCache.SimpleStatsCounter is NOT thread-safe", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2226", "Title": "#2226: ProbabilisticSet or ProbabilisticFilter interface, implemented by BloomFilter", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2223", "Title": "#2223: Add ComparisonTester to guava-testlib", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2207", "Title": "#2207: Some kind of warning about using ThreadLocal data with LoadingCache", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2193", "Title": "#2193: Page of useful information about building/hacking on Guava", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2176", "Title": "#2176: Futures.allAsList/successfulAsList could probably allocate less garbage", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2134", "Title": "#2134: \"SEVERE: input future failed\" spams stdout/stderr", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2118", "Title": "#2118: Exposing MinMaxPriorityQueue#maxSize", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2092", "Title": "#2092: Is caching of collection views worthwhile?", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2085", "Title": "#2085: Discourage Maps.newConcurrentMap() in favor of \"new ConcurrentHashMap<>()?\"", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2083", "Title": "#2083: Empty immutable collections should be explicitly documented as singletons", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2079", "Title": "#2079: filter/transform/asMap overloads for Sorted/Navigable types hinder Proguard", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2077", "Title": "#2077: CacheWriter", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2076", "Title": "#2076: MoreExecutors: submitAsync(Executor, AsyncCallable), submit(Executor, Callable)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2075", "Title": "#2075: Consider phasing out our use of interruptTask() in favor of done()", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2071", "Title": "#2071: ImmutableMap::of should accept more entries", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2069", "Title": "#2069: Add FluentSource wrapping up CharSource into an object source", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2068", "Title": "#2068: Plan for ordering in our hash-based collections", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2063", "Title": "#2063: Cache performance", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2058", "Title": "#2058: Futures.addCallback should document what happens to exceptions thrown by the callback", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2049", "Title": "#2049: AsyncEventBus  with  CyclicBarrier", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2048", "Title": "#2048: Race-Condition Bug in CycleDetectingLockFactory", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2034", "Title": "#2034: guava-testlib not compatible with latest version of Truth", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2033", "Title": "#2033: ImmutableMap.Builder can be subclassed outside of the package", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2011", "Title": "#2011: ByteStreams.nullByteSink()", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2009", "Title": "#2009: Add TreeTraverser.xxxTraversal(Iterable) overloads for multiple root nodes", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "2007", "Title": "#2007: Stopwatch.toString(TimeUnit)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1994", "Title": "#1994: Make it easier to implement Cache with similar functionality to LocalCache", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1991", "Title": "#1991: Add a multi-level cache", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1989", "Title": "#1989: Make the execution of {Async,}Function.apply by {transform,catching}{,Async} interruptible", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1973", "Title": "#1973: Javadoc of HashBiMap#containsValue #inverse", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1960", "Title": "#1960: ImmutableList.iterator() shouldn't retain a reference to the ImmutableList", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1957", "Title": "#1957: tryParseUnsigned*", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1934", "Title": "#1934: Feature request: A new callback for receiving status updates before callback completion", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1932", "Title": "#1932: Iterators.exhaust(Iterator)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1920", "Title": "#1920: How to use own Map implementation to store cached values in Guava Cache?", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1913", "Title": "#1913: Make IncomparableValueException public", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1910", "Title": "#1910: Provide a cleaner way to transform Ranges", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1895", "Title": "#1895: Adding support for sorted iteration streams", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1894", "Title": "#1894: A useful lock feature", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1871", "Title": "#1871: AbstractLoadingCache missing get(Object, Callable)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1863", "Title": "#1863: Preventing thread starvation in blocking operations", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1862", "Title": "#1862: Order of enqueued events", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1856", "Title": "#1856: \"Throttle\" for slowing down rapidly submitted Runnables", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1855", "Title": "#1855: Immutable collections do not guard against wrong Collection.toArray() method", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1854", "Title": "#1854: Change size-based eviction to allow for significantly varying segment sizes", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1852", "Title": "#1852: Add a checked narrowing operation to TypeToken.", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1851", "Title": "#1851: Sets.newHashSet Javadoc should suggest use of diamond operator", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1849", "Title": "#1849: Hashing support for bcrypt", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1838", "Title": "#1838: missing functionality in CacheStats", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1837", "Title": "#1837: Probable EventBus memory leak when shared class loader used", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1835", "Title": "#1835: ImmutableSortedSet with 1 non-Comparable element", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1832", "Title": "#1832: Canonicalize a whole RangeSet at once", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1817", "Title": "#1817: Allow AsyncEventBus to drain its queue", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1813", "Title": "#1813: Document immutability of ranges in the JavaDocs", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1812", "Title": "#1812: Improved nullability annotations", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1803", "Title": "#1803: Add abstract support superclasses for NavigableSet, NavigableMap", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1800", "Title": "#1800: Helper for sorting nested nullable properties", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1799", "Title": "#1799: Missing use case: transforming Optional to Optional", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1792", "Title": "#1792: FileBackedOutputStream can leak open files on IO error", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1791", "Title": "#1791: Double.POSITIVE_INFINITY seems to poison the com.google.common.util.concurrent.RateLimiter", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1789", "Title": "#1789: Immutable supplier of ByteChannels", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1788", "Title": "#1788: Make ByteStreams.toByteArray(InputStream, int) public", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1786", "Title": "#1786: add indexOf to all immutable Set/collection", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1778", "Title": "#1778: RangeTree<C extends Comparable> for overlapping range queries", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1774", "Title": "#1774: Allow building RateLimiter instances with Ticker", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1756", "Title": "#1756: Add examples to UrlEscapers javadoc", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1742", "Title": "#1742: Iterables.get() alternative returning Optional.absent()?", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1740", "Title": "#1740: Consider alternative to EventBus's re-entrant event queueing strategy", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1735", "Title": "#1735: FluentIterable equals", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1727", "Title": "#1727: Multirator : an iterator that iterates over other iterators", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1726", "Title": "#1726: MediaType isn't lenient enough for real-world media types", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1714", "Title": "#1714: Range.OfXX, where XX is a primitive type?", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1705", "Title": "#1705: Publicize guava-testlib somehow", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1694", "Title": "#1694: AbstractBiMap breaks the Map contract for put(key, value)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1682", "Title": "#1682: Set Export-Package versions on a per-package basis", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1680", "Title": "#1680: CacheBuilder#removalListener(RemovalListener) lacks information about deferred invoking RemovalListener", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1676", "Title": "#1676: AtomicLongMap.incrementAll(Iterable<K>)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1664", "Title": "#1664: com.google.common.io.FileBackedOutputStream.update resource leak", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1652", "Title": "#1652: Make HashingOutputStream require that the stream be closed before retrieving hash", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1634", "Title": "#1634: MapMakerInternalMap potential performance improvement?", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1620", "Title": "#1620: Release SourceCodeEscapers", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1617", "Title": "#1617: @UsedReflectively", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1613", "Title": "#1613: ByteSink based on ByteArrayInputStream", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1610", "Title": "#1610: ArrayListTable contribution", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1608", "Title": "#1608: Locks in try-with-resource", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1600", "Title": "#1600: Given a Collection of ListenableFuture, provide a method to retrieve the first succeeded one that matches a criteria.", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1593", "Title": "#1593: Google Guava 15.0 Error with GWT 2.5.1?", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1592", "Title": "#1592: Make Files.newReader() etc. more defensive against possible exceptions", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1587", "Title": "#1587: Involution BiMap (map that is its own inverse)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1585", "Title": "#1585: Should HashCode.writeBytesTo have an overload that doesn't require passing maxLength?", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1579", "Title": "#1579: TreeMultimap.create(TreeMultimap) takes O(n log n)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1578", "Title": "#1578: Update ServiceExplained documentation for Guava 15", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1576", "Title": "#1576: BloomFilter can't be serialized in Android", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1565", "Title": "#1565: InternetDomainName needs better documentation to educate users on what public suffixes really are", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1551", "Title": "#1551: Ability to convert Range bound types", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1531", "Title": "#1531: Add Cache invalidate(Object, Runnable) or similar functionality", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1530", "Title": "#1530: SimpleTimeLimiter", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1521", "Title": "#1521: Additional Executor implementation/factories", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1517", "Title": "#1517: totalWeight Overflow problem in LocalCache.java", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1515", "Title": "#1515: Cache.getIfPresent with valueLoader", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1502", "Title": "#1502: AsyncEventBus: @AllowConcurrentEvents doesn't work with a (cglib) proxy", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1499", "Title": "#1499: Objects.exactCast", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1497", "Title": "#1497: Provide best effort method to add directory to the classloader at runtime", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1481", "Title": "#1481: Add option to overflow cache to disk", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1472", "Title": "#1472: Is Flushables worthwhile?", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1461", "Title": "#1461: Consider Hashable interface", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1456", "Title": "#1456: Evaluate some other Google-internal Future utilities for public release in Futures.java", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1446", "Title": "#1446: Private helper copyResult(Future input, AbstractFuture output)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1428", "Title": "#1428: Add method memoizeWithRetry to Suppliers.java", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1426", "Title": "#1426: Consider Futures.getNow", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1413", "Title": "#1413: Possible optimization of FluentIterable.transform", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1411", "Title": "#1411: AbstractListeningExecutorServices/ListenableFutureTask swallows Errors in listeners", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1410", "Title": "#1410: Guava cache memory leak", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1409", "Title": "#1409: Add more uninterruptible methods", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1408", "Title": "#1408: New utility function to com.google.common.base.Throwables", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1406", "Title": "#1406: Feature Request: allow specifying dependencies in ServiceManager", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1400", "Title": "#1400: Add Futures.transform support for Iterable", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1387", "Title": "#1387: Addition to Files", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1374", "Title": "#1374: ImmutableMap javadoc should mention Maps.immutableEnumMap, etc.", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1372", "Title": "#1372: Add VoidCallable", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1370", "Title": "#1370: Add ByteStreams.zeroInputStream", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1364", "Title": "#1364: Add method to decrement permits in RateLimiter", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1362", "Title": "#1362: TypeToken.rejectTypeVariables", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1349", "Title": "#1349: Add 'register(Object listener, Executor listenerCaller)' to AsyncEventBus", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1347", "Title": "#1347: Reconsider regexEscaper()", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1345", "Title": "#1345: Interners should allow more inspection", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1336", "Title": "#1336: Add ExecutionList.setUncaughtExceptionHandler", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1334", "Title": "#1334: Specifically document that CheckedFuture can throw an exception even if its \"task\" cannot", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1326", "Title": "#1326: Consider adding HashingInputStream", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1323", "Title": "#1323: Consider adding asBigInteger() to HashCode", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1321", "Title": "#1321: Decide whether to escape semicolons in urlPathSegmentEscaper()", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1315", "Title": "#1315: Add awaitTerminationUninterruptibly(..) for ExecutorService", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1300", "Title": "#1300: Patch for /guava-testlib/pom.xml", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "13", "Title": "#13: UniqueList<E>", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1293", "Title": "#1293: Class for accessing fields", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1274", "Title": "#1274: Feature Request: ExecutorBuilder", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1258", "Title": "#1258: InetAddresses.cidrRange", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1257", "Title": "#1257: TimeLimiter.appliesWithTimeout", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1240", "Title": "#1240: ImmutableTable.Builder ambiguity", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1218", "Title": "#1218: Annotate ImmutableCollection as @Immutable", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1209", "Title": "#1209: FileBackedOutputStream: possibility to delete the file without File.deleteOnExit()", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1200", "Title": "#1200: Refresh proactively as part of periodic cache maintenance?", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1180", "Title": "#1180: Drop or improve support for Channels", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1172", "Title": "#1172: Concurrent LIRS cache implementation", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1171", "Title": "#1171: Optional.transformToNullable", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1163", "Title": "#1163: post to asynceventbus don't work with persistence", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "113", "Title": "#113: Caution about ambiguity in overloaded varargs methods", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1122", "Title": "#1122: LoadingCache doesn't get along well with interrupted threads", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1089", "Title": "#1089: Add rate tracking counter", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1068", "Title": "#1068: Feature Request: Futures.getOrCancel", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1059", "Title": "#1059: ImmutableBitSet", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1054", "Title": "#1054: Cache.stats should specify behavior when stats are not enabled", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1040", "Title": "#1040: Cache.get(K, Callable) doesn't document all its invariants", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1037", "Title": "#1037: Collections2 : retrieve size k permutations in a list of n elements", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1034", "Title": "#1034: Allow custom handler finding strategy in event bus", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1029", "Title": "#1029: Lists.concat(List, List)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1016", "Title": "#1016: Provide DiscreteDomain.advance(T, long)", "Probability": 0.01, "Repo": "google/guava"}, {"Id": "1009", "Title": "#1009: Method(s) to compare a C to a Range<C> (below, contained, above?)", "Probability": 0.01, "Repo": "google/guava"}], "Error": ""}